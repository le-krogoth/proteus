/*-----------------------------------------------------------------------------
 **
 ** - Proteus -
 **
 ** Copyright 2018 by Krogoth and the contributing authors
 **
 ** This program is free software; you can redistribute it and/or modify it
 ** under the terms of the GNU Affero General Public License as published by the
 ** Free Software Foundation, either version 3 of the License, or (at your option)
 ** any later version.
 **
 ** This program is distributed in the hope that it will be useful, but WITHOUT
 ** ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ** FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License
 ** for more details.
 **
 ** You should have received a copy of the GNU Affero General Public License
 ** along with this program. If not, see <http://www.gnu.org/licenses/>.
 **
 ** -----------------------------------------------------------------------------*/
#ifndef mode_unicorn_h
#define mode_unicorn_h

#include <U8g2lib.h>
#include "../EventHandler.h"
#include "BaseMode.h"

#define unicorn_1_width 22
#define unicorn_1_height 21
static unsigned char unicorn_1_bits[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x36,
        0x00, 0x00, 0x36, 0x00, 0x80, 0x31, 0x00, 0x80, 0x31, 0x00, 0x40, 0x0e,
        0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x80, 0x7f, 0x00, 0x80, 0x7f, 0x00,
        0xf8, 0x7f, 0x00, 0xf8, 0x7f, 0x00, 0x9c, 0x7f, 0x00, 0x80, 0x41, 0x00,
        0x80, 0x41, 0x00, 0x80, 0x41, 0x00, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00 };

#define unicorn_2_width 26
#define unicorn_2_height 20
static unsigned char unicorn_2_bits[] = {
        0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0xc0, 0x00,
        0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x20, 0x03, 0x00, 0x00, 0x20, 0x03,
        0x00, 0x00, 0x18, 0x03, 0x00, 0x00, 0xe6, 0x00, 0x00, 0x00, 0xe6, 0x00,
        0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x80, 0xff, 0x07, 0x00,
        0x80, 0xff, 0x07, 0x00, 0xf0, 0xff, 0x07, 0x00, 0x9c, 0xff, 0x07, 0x00,
        0x9c, 0xff, 0x07, 0x00, 0x00, 0x06, 0x01, 0x00, 0x00, 0x06, 0x01, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

#define unicorn_3_width 22
#define unicorn_3_height 21
static unsigned char unicorn_3_bits[] = {
        0x00, 0x00, 0x30, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x36,
        0x00, 0x00, 0x36, 0x00, 0x80, 0x31, 0x00, 0x40, 0x0e, 0x00, 0x40, 0x0e,
        0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x80, 0x7f, 0x00, 0x80, 0x7f, 0x00,
        0xf8, 0x7f, 0x00, 0x9c, 0x7f, 0x00, 0x9c, 0x7f, 0x00, 0x80, 0x41, 0x00,
        0x80, 0x41, 0x00, 0x80, 0x41, 0x00, 0x80, 0x41, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00 };

#define toaster_0_width 32
#define toaster_0_height 32
static unsigned char toaster_0_bits[] = {
        0x00, 0x0c, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x80, 0x1b, 0x00, 0x00,
        0xc0, 0x2e, 0x0f, 0x00, 0xe0, 0xf7, 0x7f, 0x00, 0xe0, 0x3d, 0xe0, 0x01,
        0xf0, 0x07, 0xfe, 0x07, 0xf0, 0xc1, 0x03, 0x0e, 0x78, 0x70, 0xe0, 0x10,
        0x18, 0x1c, 0x1c, 0xff, 0x0c, 0x07, 0xef, 0x2b, 0x86, 0xc1, 0x77, 0xff,
        0xde, 0xf0, 0xfb, 0x15, 0x79, 0xd8, 0xbb, 0x7f, 0xe1, 0xed, 0xfd, 0x0a,
        0x8d, 0xf7, 0xdd, 0x1f, 0x35, 0xf6, 0x7e, 0x00, 0xc5, 0xfa, 0xf6, 0x05,
        0xc1, 0x7a, 0x1f, 0x16, 0xd1, 0x7a, 0x7b, 0x03, 0x01, 0x52, 0x8f, 0x13,
        0x11, 0xf2, 0xf6, 0x01, 0x01, 0xd2, 0xf9, 0x10, 0x11, 0x22, 0x3f, 0x08,
        0x01, 0xc2, 0x0f, 0x04, 0x11, 0x02, 0x00, 0x03, 0x01, 0x02, 0xc0, 0x00,
        0x02, 0x02, 0x30, 0x00, 0x04, 0x02, 0x0c, 0x00, 0x18, 0x82, 0x03, 0x00,
        0x60, 0x72, 0x00, 0x00, 0x80, 0x0f, 0x00, 0x00 };

static unsigned char *afUnicorn[] = { unicorn_1_bits, unicorn_2_bits, unicorn_3_bits };

class ModeUnicorn : public BaseMode
{
public:
    ModeUnicorn(EventHandler* const e, HardwareSerial* const hws);

    void handleEvents();
    //void paintFrame(U8G2_SSD1306_128X32_UNIVISION_F_SW_I2C* const u8g2);
    void paintFrameInternal();

protected:

private:
    uint8_t frameCounter = 0;
    uint8_t currentSprite = 0;

};

#endif
